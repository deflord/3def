# This macro was provided by discord user Garrettwp to whom i give my thanks for sharing it with me.
# I have tweaked it a lot.
# They are based on the great Annex magprobe dockable probe macros "#Originally developed by Mental,
# modified for better use on K-series printers by RyanG and Trails", kudos to them.
# That macro as since evolved into a klipper plugin that currently is pending inclusion in klipper,
# more information here, https://github.com/Annex-Engineering/Quickdraw_Probe/tree/main/Klipper_Macros
# User richardjm revised the macro variables and added some functions, thanks a lot
# by standing on the shoulders of giants, lets see if we can see further
#
# the current home for this version is https://github.com/jlas1/Klicky-Probe
# the 1000 values below is to give an error instead of doing something wrong, hopefully, this won't be used is a printer larger than 1 meter

[gcode_macro _User_Variables]
variable_verbose:             True    # Включить подробный вывод в консоль (для тестирования и отладки)
variable_debug:              False    # Enable Debug output
variable_travel_speed:         200    # С какой скоростью будут происходить перемещения по X и Y
variable_move_accel:          10000   # С каким ускорением будут происходить перемещения по X и Y
variable_dock_speed:            100   # Скорость перемещения головки при парковке датчика в док
variable_release_speed:         100   # Скорость перемещения при установке
variable_z_drop_speed:          20    # Скорость по оси Z при установке датчика в док

variable_safe_z:         	    25    # Минимальная высота по Z для установки или снятия датчика
variable_enable_z_hop:        True    # Подъём кровати перед перемещением установкой или снятием датчика

variable_max_bed_y:           400     # Максимальный размер кровати по Y. Позволяет избежать ошибок.
variable_max_bed_x:           400     # Максимальный размер кровати по Y. Позволяет избежать ошибок.

# Координаты, при которых будет измеряться дом по оси Z
variable_z_endstop_x:         200
variable_z_endstop_y:         200

# Координаты дока
variable_docklocation_x:      1         # Положение дока по оси X
variable_docklocation_y:      407       # Положение дока по оси Y
variable_docklocation_z:      -128      # Положение дока по оси Z（-128 если док закреплён на портале）

# Данные параметры используются если у вас док-станция на сервоприводе
variable_enable_dock_servo:  False    # Если док на сервоприводе, установите True
variable_servo_name:        'NAME'    # Название базового сервопривода в секции [servo] в файле printer.cfg
variable_servo_deploy:          10    # В этом примере приведено значение, используемое для полного выдвижения сервопривода
variable_servo_retract:         11    # В этом примере используется значение, используемое для полного убирания сервопривода (initial_angle в конфигурации [servo]).
variable_servo_delay:          250    # Это задержка, ожидающая, пока сервопривод достигнет требуемого местоположения, будьте осторожны с высокими значениями

# Перемещение док-станции, окончательное перемещение головки инструмента для установки датчика в док
Variable_dockmove_x:          50
Variable_dockmove_y:          0
Variable_dockmove_z:           0

# Перемещение насадки. последнее движение головки инструмента для установки датчика в док
Variable_attachmove_x:           0
Variable_attachmove_y:           40
Variable_attachmove_z:           0

# Помогает распутать проводку в трудных ситуациях
variable_umbilical:          False    # Распутывать проводку
variable_umbilical_x:           15    # Перемещение для распутывания по X
variable_umbilical_y:           15    # Перемещение для распутывания по Y

# Место парковки коловки
variable_park_toolhead:      False    # Включение парковки головки
variable_parkposition_x:       125
variable_parkposition_y:       125
variable_parkposition_z:        30    # -128 excludes Z - Park only on X-Y

variable_version:                1    # Помогает пользователям обновлять необходимые переменные,
                                      # не обновляйте, если указанные выше переменные не обновлены

# Нижние параметры обычно не требуется настраивать
#Attach move2
Variable_attachmove2_x:          0    
Variable_attachmove2_y:          0    
Variable_attachmove2_z:          0    

variable_home_backoff_x:        10    
                                      
variable_home_backoff_y:        10    

variable_override_homing:       ''    # Настройки позволяющие избежать столкновения датчика с доком
                                      #  '' = настройка по умолчанию
                                      # 'X' = В начале в дом идёт X
                                      # 'Y' = В начале в дом идёт Y
                                      
variable_dock_on_zhome:       True    # Если в этом нет необходимости, закрепите датчик на Z-образной головке (на некоторых принтерах избегайте прикосновения к подложке).

variable_bypass_probe_docking:        False      #   Стыковка датчика с переменным байпасом                        

# Не изменяйте следующий код, если не знаете, что делаете
gcode:
    {% set Mx = printer['configfile'].config["stepper_x"]["position_max"]|float %}
    {% set My = printer['configfile'].config["stepper_y"]["position_max"]|float %}
    {% set Ox = printer['configfile'].config["probe"]["x_offset"]|float %}
    {% set Oy = printer['configfile'].config["probe"]["y_offset"]|float %}
    {% set Oz = printer['configfile'].config["probe"]["z_offset"]|float %}

    # If x, y coordinates are set for z endstop, assign them
    {% if z_endstop_x != 0 or z_endstop_y != 0 %}
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ z_endstop_x }
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ z_endstop_y }

    # if no x, y coordinates for z endstop, assume probe is endstop and move toolhead to center of bed
    {% else %}
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ (Mx * 0.5) - Ox }
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ (My * 0.5) - Oy }
    {% endif %}
