# Макрос выравнивания по всем осям. Получаем делаем дом, делаем выравнивание портала, делаем Z-offcet
[gcode_macro G32]
gcode:
    BED_MESH_CLEAR                              # Очищаем ранее загруженную карту стола
    G28                                         # Находим дом по всем осям
	clean_nozzle                                # Очищаем сопло
    QUAD_GANTRY_LEVEL                           # Выравниваем портал
    G28                                         # Находим дом по всем осям


# Макрос постановки на паузу. Расширяет штатный макрос Klipper.
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

# Макрос снятия с паузы. Расширяет штатный макрос Klipper.
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####

  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

  RESUME_BASE {get_params}

# Макрос парковки головы при постановке на паузу и сброса печати

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### Укажите парковочною позицию для X и Y #####
  # По умолчанию это max posion из вашего printer.cfg

  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

# Макрос отмены печати. Расширяет штатный макрос Klipper.
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true

  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}

  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

# Макрос загрузки пластика
[gcode_macro LOAD_FILAMENT]
variable_load_distance:  100
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    SET_FILAMENT_SENSOR SENSOR=Пластик ENABLE=0 # Выключаем датчик пластика
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    SET_FILAMENT_SENSOR SENSOR=Пластик ENABLE=1 # Включаем датчик пластика
    RESTORE_GCODE_STATE NAME=load_state

# Макрос выгрузки пластика
[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  100
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

# Макрос начала печати. Его необходимо запускать перед каждой печатью. Добавьте его в стартовый G-Code слайсера
[gcode_macro PRINT_START]
gcode:
    CLEAR_PAUSE
    SET_FILAMENT_SENSOR SENSOR=Пластик ENABLE=0 # Выключаем датчик пластика
    {% set bedtemp=params.BED |int%}            # Получаем температуру стола из слайсера
    {% set hotendtemp=params.EXTRUDER |int%}    # Получаем температуру хотэнда из слайсера
    {% set chambertemp=params.CHAMBER |default |int %}  # Получаем температуру внутри печатной камеры из слайсера
    M190 S {bedtemp}                            # Включаем нагрев стола на температуру из слайсера и ждём нагрева
    G92 E0                                      # Обнуляем значение шагов экструдера
    G32                                         # Запускаем поиск дома, потом выравнивание портала и поиск z-offcet
    M104 S{hotendtemp}                          # Запускаем нагрев хотэнда и не ждём окончания нагрева
    clean_nozzle                                # Вызываем макрос очистки сопла
	BED_MESH_PROFILE LOAD=default               # Загружаем сохраненную карту стола
    SET_LED LED=sb_leds GREEN=1  RED=1 BLUE=1 WHITE=1  # Включаем подсветку SB
	G92 E0                                      # Обнуляем значение шагов экструдера
    G1 X5 Y3 F5000                              # Идем в коородинаты х = 3 У = 3
    G1 Z0.32 F400                               # Поднимаем сопло на высоту 0,32 мм
    G1 X395 Y3 E38 F3000                        # Выдавливаем линию очистки до координаты X = 295
    G1 Z0.5 F200                                # Поднимаем сопло на высоту 0,5 мм
    G92 E0                                      # Обнуляем значение шагов экструдера
    SET_PIN PIN=beeper VALUE=1                  # Начинаем пищать бипером
    G4 P3000                                    # Пищим бипером 3000 миллисекунд
    SET_PIN PIN=beeper VALUE=0                  # Прекращаем пищать бипером
	SET_FILAMENT_SENSOR SENSOR=Пластик ENABLE=1 # Включаем датчик пластика

# Макрос окончания печати. Его необходимо запускать после каждой печати. Добавьте его в конечный G-Code слайсера
[gcode_macro PRINT_END]                         # Макрос необходимо запускать после окончания печати. Добавьте его в конечный G-Code слайсера
gcode:
    M400                                        # Ожидаем окончания текущего движения
    G92 E0                                      # Обнуляем значение шагов экструдера
    G91                                         # Переходим в относительные координаты
    G0 Z1.00 X20.0 Y20.0 F6000                  # Поднимаем сопло на 1 мм по Z и сдвигаем его на 20 мм вправо и 20 мм назад
    TURN_OFF_HEATERS                            # Отключаем все нагреватели
    M107                                        # Выключаем вентиляторы обдува модели
    G1 Z2 F3000                                 # Поднимаем сопло на 2 мм по Z
    G90                                         # Возвращаемся в абсолютные координаты
    G0  X395 Y395 F3600                         # Идем в крайнюю заднюю точку X = 395 Y = 395
    BED_MESH_CLEAR                              # Очищаем карту стола
	SET_PIN PIN=beeper VALUE=1                  # Начинаем пищать бипером
    G4 P3000                                    # Пищим бипером 3000 миллисекунд
    SET_PIN PIN=beeper VALUE=0                  # Прекращаем пищать бипером
    G4 P3000                                    # Ждём 3000 миллисекунд между писками
    SET_PIN PIN=beeper VALUE=1                  # Начинаем пищать бипером
    G4 P3000                                    # Пищим бипером 3000 миллисекунд
    SET_PIN PIN=beeper VALUE=0                  # Прекращаем пищать бипером
    UPDATE_DELAYED_GCODE ID=powerOFF DURATION=300     # Ожидаем выключения 300 секунд.